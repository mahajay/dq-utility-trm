/**
 * This class is generated by jOOQ
 */
package com.dq.DQTRM.model.tables;


import com.dq.DQTRM.model.Dqtrm;
import com.dq.DQTRM.model.tables.records.TmDrawingRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmDrawing extends TableImpl<TmDrawingRecord> {

    private static final long serialVersionUID = 230688351;

    /**
     * The reference instance of <code>DQTRM.TM_DRAWING</code>
     */
    public static final TmDrawing TM_DRAWING = new TmDrawing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmDrawingRecord> getRecordType() {
        return TmDrawingRecord.class;
    }

    /**
     * The column <code>DQTRM.TM_DRAWING.FK_TRADEMARK_GID</code>.
     */
    public final TableField<TmDrawingRecord, String> FK_TRADEMARK_GID = createField("FK_TRADEMARK_GID", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.COLOR_IN</code>.
     */
    public final TableField<TmDrawingRecord, String> COLOR_IN = createField("COLOR_IN", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.THREE_DIMENSION_IN</code>.
     */
    public final TableField<TmDrawingRecord, String> THREE_DIMENSION_IN = createField("THREE_DIMENSION_IN", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.COLOR_CLAIM_TX</code>.
     */
    public final TableField<TmDrawingRecord, String> COLOR_CLAIM_TX = createField("COLOR_CLAIM_TX", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.LOCK_CONTROL_NO</code>.
     */
    public final TableField<TmDrawingRecord, Integer> LOCK_CONTROL_NO = createField("LOCK_CONTROL_NO", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.CREATE_TS</code>.
     */
    public final TableField<TmDrawingRecord, String> CREATE_TS = createField("CREATE_TS", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.CREATE_USER_ID</code>.
     */
    public final TableField<TmDrawingRecord, String> CREATE_USER_ID = createField("CREATE_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.LAST_MOD_TS</code>.
     */
    public final TableField<TmDrawingRecord, String> LAST_MOD_TS = createField("LAST_MOD_TS", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>DQTRM.TM_DRAWING.LAST_MOD_USER_ID</code>.
     */
    public final TableField<TmDrawingRecord, String> LAST_MOD_USER_ID = createField("LAST_MOD_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * Create a <code>DQTRM.TM_DRAWING</code> table reference
     */
    public TmDrawing() {
        this("TM_DRAWING", null);
    }

    /**
     * Create an aliased <code>DQTRM.TM_DRAWING</code> table reference
     */
    public TmDrawing(String alias) {
        this(alias, TM_DRAWING);
    }

    private TmDrawing(String alias, Table<TmDrawingRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmDrawing(String alias, Table<TmDrawingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dqtrm.DQTRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmDrawing as(String alias) {
        return new TmDrawing(alias, this);
    }

    /**
     * Rename this table
     */
    public TmDrawing rename(String name) {
        return new TmDrawing(name, null);
    }
}
